"""initial migration

Revision ID: 6beabfbf534d
Revises: 
Create Date: 2025-01-22 04:10:35.381513

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6beabfbf534d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tb_parameter",
        sa.Column("id_parameter", sa.UUID(), nullable=False),
        sa.Column("nm_parameter", sa.String(), nullable=False),
        sa.Column("ds_parameter", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id_parameter"),
        sa.UniqueConstraint("id_parameter"),
        sa.UniqueConstraint("nm_parameter"),
    )
    op.create_table(
        "tb_user",
        sa.Column("id_user", sa.UUID(), nullable=False),
        sa.Column("nm_user", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id_user"),
        sa.UniqueConstraint("id_user"),
    )
    op.create_index(op.f("ix_tb_user_username"), "tb_user", ["nm_user"], unique=True)
    op.create_table(
        "tb_investigation",
        sa.Column("id_investigation", sa.UUID(), nullable=False),
        sa.Column("nm_investigation", sa.String(), nullable=False),
        sa.Column("id_user", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["tb_user.id_user"],
        ),
        sa.PrimaryKeyConstraint("id_investigation"),
    )
    op.create_index(
        op.f("ix_tb_investigation_id_investigation"),
        "tb_investigation",
        ["id_investigation"],
        unique=False,
    )
    op.create_table(
        "tb_search",
        sa.Column("id_search", sa.UUID(), nullable=False),
        sa.Column("nm_source", sa.String(), nullable=False),
        sa.Column("id_investigation", sa.UUID(), nullable=False),
        sa.Column(
            "dt_creation",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("dt_processing", sa.DateTime(timezone=True), nullable=True),
        sa.Column("dt_finished", sa.DateTime(timezone=True), nullable=True),
        sa.Column("dt_cancelled", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "tp_status",
            sa.Enum(
                "WAITING",
                "FINISHED",
                "PROCESSING",
                "ERROR",
                "CANCELLED",
                name="tp_status_enum",
                create_constraint=True,
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_investigation"],
            ["tb_investigation.id_investigation"],
        ),
        sa.PrimaryKeyConstraint("id_search"),
    )
    op.create_table(
        "tb_parameter_search",
        sa.Column("id_parameter_search", sa.UUID(), nullable=False),
        sa.Column("id_search", sa.UUID(), nullable=False),
        sa.Column("id_parameter", sa.UUID(), nullable=False),
        sa.Column("vl_parameter_search", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_parameter"],
            ["tb_parameter.id_parameter"],
        ),
        sa.ForeignKeyConstraint(
            ["id_search"],
            ["tb_search.id_search"],
        ),
        sa.PrimaryKeyConstraint("id_parameter_search"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tb_parameter_search")
    op.drop_table("tb_search")
    op.drop_index(
        op.f("ix_tb_investigation_id_investigation"), table_name="tb_investigation"
    )
    op.drop_table("tb_investigation")
    op.drop_index(op.f("ix_tb_user_username"), table_name="tb_user")
    op.drop_table("tb_user")
    op.drop_table("tb_parameter")
    # ### end Alembic commands ###
